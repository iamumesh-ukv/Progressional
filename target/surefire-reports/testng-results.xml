<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-15T23:04:24 IST" name="Surefire suite" finished-at="2024-10-15T23:07:35 IST" duration-ms="190694">
    <groups>
    </groups>
    <test started-at="2024-10-15T23:04:24 IST" name="Surefire test" finished-at="2024-10-15T23:07:35 IST" duration-ms="190694">
      <class name="com.progressional.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:06:46 IST" name="setup" finished-at="2024-10-15T23:06:58 IST" duration-ms="11671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAnAccountWithMandatoryFields()[pri:1, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:06:58 IST" name="verifyRegisteringAnAccountWithMandatoryFields" finished-at="2024-10-15T23:06:59 IST" duration-ms="988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:06:59 IST" name="tearDown" finished-at="2024-10-15T23:06:59 IST" duration-ms="427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:06:59 IST" name="setup" finished-at="2024-10-15T23:07:10 IST" duration-ms="10899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithExistingEmailAddress()[pri:2, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:07:10 IST" name="verifyRegisteringAccountWithExistingEmailAddress" finished-at="2024-10-15T23:07:11 IST" duration-ms="901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithExistingEmailAddress -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:07:11 IST" name="tearDown" finished-at="2024-10-15T23:07:11 IST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:07:11 IST" name="setup" finished-at="2024-10-15T23:07:23 IST" duration-ms="11516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithoutFillingAnyDetails()[pri:3, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:07:23 IST" name="verifyRegisteringAccountWithoutFillingAnyDetails" finished-at="2024-10-15T23:07:23 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithoutFillingAnyDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.progressional.qa.testcases.RegisterTest@50b472aa]" started-at="2024-10-15T23:07:23 IST" name="tearDown" finished-at="2024-10-15T23:07:23 IST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.progressional.qa.testcases.RegisterTest -->
      <class name="com.progressional.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:07 IST" name="setup" finished-at="2024-10-15T23:05:31 IST" duration-ms="24301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:31 IST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSupplier" finished-at="2024-10-15T23:05:34 IST" duration-ms="2452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[umesh@yopmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Umesh@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="teaDown()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:34 IST" name="teaDown" finished-at="2024-10-15T23:05:36 IST" duration-ms="1884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:36 IST" name="setup" finished-at="2024-10-15T23:05:51 IST" duration-ms="15651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:2, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:51 IST" name="verifyLoginWithInvalidCredentials" finished-at="2024-10-15T23:05:52 IST" duration-ms="763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="teaDown()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:52 IST" name="teaDown" finished-at="2024-10-15T23:05:53 IST" duration-ms="559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:05:53 IST" name="setup" finished-at="2024-10-15T23:06:05 IST" duration-ms="12295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword()[pri:3, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:05 IST" name="verifyLoginWithInvalidEmailAndValidPassword" finished-at="2024-10-15T23:06:05 IST" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="teaDown()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:05 IST" name="teaDown" finished-at="2024-10-15T23:06:06 IST" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:06 IST" name="setup" finished-at="2024-10-15T23:06:25 IST" duration-ms="19299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidEmailAndInvalidPassword()[pri:4, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:25 IST" name="verifyLoginWithValidEmailAndInvalidPassword" finished-at="2024-10-15T23:06:29 IST" duration-ms="3458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="teaDown()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:29 IST" name="teaDown" finished-at="2024-10-15T23:06:30 IST" duration-ms="1238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:30 IST" name="setup" finished-at="2024-10-15T23:06:45 IST" duration-ms="15114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithoutProvidingCredentials()[pri:5, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:45 IST" name="verifyLoginWithoutProvidingCredentials" finished-at="2024-10-15T23:06:45 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithoutProvidingCredentials -->
        <test-method is-config="true" signature="teaDown()[pri:0, instance:com.progressional.qa.testcases.LoginTest@6ca8564a]" started-at="2024-10-15T23:06:45 IST" name="teaDown" finished-at="2024-10-15T23:06:46 IST" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.progressional.qa.testcases.LoginTest -->
      <class name="com.progressional.qa.testcases.UpdateprofileTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.UpdateprofileTest@31368b99]" started-at="2024-10-15T23:07:23 IST" name="setup" finished-at="2024-10-15T23:07:34 IST" duration-ms="10851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updatePersonalDetailsPageManadatoryFields()[pri:1, instance:com.progressional.qa.testcases.UpdateprofileTest@31368b99]" started-at="2024-10-15T23:07:34 IST" name="updatePersonalDetailsPageManadatoryFields" finished-at="2024-10-15T23:07:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePersonalDetailsPageManadatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.progressional.qa.testcases.UpdateprofileTest@31368b99]" started-at="2024-10-15T23:07:34 IST" name="tearDown" finished-at="2024-10-15T23:07:35 IST" duration-ms="666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.progressional.qa.testcases.UpdateprofileTest -->
      <class name="com.progressional.qa.testcases.CreateJourneyTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.progressional.qa.testcases.CreateJourneyTest@4c9f8c13]" started-at="2024-10-15T23:04:24 IST" name="setup" finished-at="2024-10-15T23:05:01 IST" duration-ms="36952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCreateJourney()[pri:1, instance:com.progressional.qa.testcases.CreateJourneyTest@4c9f8c13]" started-at="2024-10-15T23:05:01 IST" name="verifyCreateJourney" finished-at="2024-10-15T23:05:02 IST" duration-ms="297" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[normalize-space()='Create New Journey']"}
  (Session info: chrome=103.0.5060.114)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c3af83f46c0f97e51418d424bac32f88, findElement {using=xpath, value=//span[normalize-space()='Create New Journey']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\umesh\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64297}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64297/devtoo..., se:cdpVersion: 103.0.5060.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c3af83f46c0f97e51418d424bac32f88]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[normalize-space()='Create New Journey']"}
  (Session info: chrome=103.0.5060.114)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c3af83f46c0f97e51418d424bac32f88, findElement {using=xpath, value=//span[normalize-space()='Create New Journey']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\umesh\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64297}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64297/devtoo..., se:cdpVersion: 103.0.5060.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c3af83f46c0f97e51418d424bac32f88
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.click(Unknown Source)
at com.progressional.qa.pages.CreateJourneyPage.clickOnCreateJourneyButton(CreateJourneyPage.java:28)
at com.progressional.qa.testcases.CreateJourneyTest.verifyCreateJourney(CreateJourneyTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateJourney -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.progressional.qa.testcases.CreateJourneyTest@4c9f8c13]" started-at="2024-10-15T23:05:02 IST" name="tearDown" finished-at="2024-10-15T23:05:07 IST" duration-ms="5427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.progressional.qa.testcases.CreateJourneyTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
